name: CI Pipeline
on:
  push:
    branches: ["master"]
jobs:
  build:
    runs-on: ubuntu-latest
    environment: python3.10
    outputs:
      dist: ${{ steps.dist-out.output.dist }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.10 on linux
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: python -m pip install -U tox versioneer tox-gh-actions pypandoc

      - name: Run tox
        run: tox

      - name: List assets
        id: dist-out
        run: echo "::set-output name=dist::$(ls .tox/dist)"
      - name: Prepare dist output
        run: cp .tox/dist/$(ls .tox/dist) ./dist.tgz

      - name: Temporarily release package
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist.tgz
          retention-days: 1

  publish-pypi:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Retrieve saved Docker image
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist/dist.tgz

      - name: PyPI publish
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: "./dist/dist.tgz"

  publish-gh:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Retrieve saved Docker image
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist.tgz

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload GitHub release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist.tgz
          asset_name: ${{ needs.build.outputs.dist }}
          asset_content_type: application/gzip
